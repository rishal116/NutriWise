import { BindingScope, DeactivationParams } from '@inversifyjs/core';
import { ContainerModule } from '../models/ContainerModule';
import { BindingManager } from './BindingManager';
import { PlanResultCacheManager } from './PlanResultCacheManager';
import { ServiceReferenceManager } from './ServiceReferenceManager';
export declare class ContainerModuleManager {
    #private;
    constructor(bindingManager: BindingManager, deactivationParams: DeactivationParams, defaultScope: BindingScope, planResultCacheManager: PlanResultCacheManager, serviceReferenceManager: ServiceReferenceManager);
    load(...modules: ContainerModule[]): Promise<void>;
    loadSync(...modules: ContainerModule[]): void;
    unload(...modules: ContainerModule[]): Promise<void>;
    unloadSync(...modules: ContainerModule[]): void;
}
//# sourceMappingURL=ContainerModuleManager.d.ts.map