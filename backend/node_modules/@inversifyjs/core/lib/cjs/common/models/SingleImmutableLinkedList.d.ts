export interface SingleImmutableLinkedListNode<T> {
    elem: T;
    previous: SingleImmutableLinkedListNode<T> | undefined;
}
export declare class SingleImmutableLinkedList<T> implements Iterable<T> {
    readonly last: SingleImmutableLinkedListNode<T>;
    constructor(last: SingleImmutableLinkedListNode<T>);
    concat(elem: T): SingleImmutableLinkedList<T>;
    [Symbol.iterator](): Iterator<T>;
}
//# sourceMappingURL=SingleImmutableLinkedList.d.ts.map